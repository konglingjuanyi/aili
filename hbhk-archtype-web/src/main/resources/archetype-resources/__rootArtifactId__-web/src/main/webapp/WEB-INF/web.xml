#set( $symbol_pound = '#' )
#set( $symbol_dollar = '$' )
#set(
$symbol_escape = '\' )
<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	version="2.5">

	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>/WEB-INF/spring.xml,classpath:org/hbhk/module/framework/server/META-INF/spring/**/*Context.xml</param-value>
	</context-param>

	<!--spring log4j -->
	<context-param>
		<param-name>webAppRootKey</param-name>
		<param-value>webName.root</param-value>
	</context-param>

	<context-param>
		<param-name>log4jConfigLocation</param-name>
		<param-value>/WEB-INF/classes/log4j.xml</param-value>
	</context-param>

	<context-param>
		<param-name>log4jRefreshInterval</param-name>
		<param-value>3000</param-value>
	</context-param>

	<listener>
		<listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
	</listener>
	<!-- 默认的spring配置文件是在WEB-INF下的applicationContext.xml -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<listener>
		<listener-class>org.springframework.security.web.session.HttpSessionEventPublisher</listener-class>
	</listener>

	<!-- 应用上下文 -->
	<listener>
		<listener-class>org.hbhk.module.framework.server.listener.AppContextListener</listener-class>
	</listener>
	<!-- session 控制 -->
	<listener>
		<listener-class>org.hbhk.module.framework.server.listener.HttpSessionEventPublisher</listener-class>
	</listener>

	<!-- 模块管理器 -->
	<filter>
		<filter-name>frameworkFilter</filter-name>
		<filter-class>org.hbhk.module.framework.server.deploy.FrameworkFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>frameworkFilter</filter-name>
		<url-pattern>/</url-pattern>
	</filter-mapping>
	<!-- 权限拦截 -->
	<filter>
		<filter-name>securityInterceptor</filter-name>
		<filter-class>org.hbhk.module.framework.server.mysecurity.MySecurityInterceptor</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>securityInterceptor</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<filter>
		<filter-name>characterEncoding</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value><!-- 强制进行转码 -->
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>characterEncoding</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!-- 默认所对应的配置文件是WEB-INF下的{servlet-name}-servlet.xml，这里便是：spring3-servlet.xml -->
	<servlet>
		<servlet-name>springmvc</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath:org/hbhk/module/framework/server/META-INF/spring/mvc/springmvc-servlet.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>springmvc</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>
	<servlet>
		<servlet-name>CXFServlet</servlet-name>
		<servlet-class>org.apache.cxf.transport.servlet.CXFServlet</servlet-class>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>CXFServlet</servlet-name>
		<url-pattern>/service/*</url-pattern>
	</servlet-mapping>
	<!-- struts2 -->
	<!-- <filter> <filter-name>struts2</filter-name> <filter-class>org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter</filter-class> 
		<init-param> <param-name>configProviders</param-name> <param-value>org.hbhk.module.framework.server.deploy.struts.ModuleConfigProvider</param-value> 
		</init-param> </filter> <filter-mapping> <filter-name>struts2</filter-name> 
		<url-pattern>*.action</url-pattern> </filter-mapping> -->

	<!-- Spring Secutiry3.1的过滤器链配置 -->
	<!-- <filter> <filter-name>springSecurityFilterChain</filter-name> <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class> 
		</filter> <filter-mapping> <filter-name>springSecurityFilterChain</filter-name> 
		<url-pattern>/*</url-pattern> </filter-mapping> -->

	<mime-mapping>
		<extension>ico</extension>
		<mime-type>image/vnd.microsoft.icon</mime-type>
	</mime-mapping>

	<resource-ref>
		<res-ref-name>jdbc/hbhkds</res-ref-name>
		<res-type>javax.sql.DataSource</res-type>
		<res-auth>Container</res-auth>
	</resource-ref>

</web-app>
