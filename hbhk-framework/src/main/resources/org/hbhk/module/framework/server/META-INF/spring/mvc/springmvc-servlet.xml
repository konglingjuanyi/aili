<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="   
           http://www.springframework.org/schema/beans   
           http://www.springframework.org/schema/beans/spring-beans-3.2.xsd   
           http://www.springframework.org/schema/context   
           http://www.springframework.org/schema/context/spring-context-3.2.xsd  
           http://www.springframework.org/schema/mvc   
           http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd">

	<bean id="resourceBean" class="org.hbhk.module.framework.server.context.ResourceRoot"
		init-method="init" />

	<!-- 约定优于配置，约定优于配置 -->

	<!-- 配置静态资源，直接映射到对应的文件夹，不被DispatcherServlet处理，3.04新增功能，需要重新设置spring-mvc-3.0.xsd -->
	<mvc:resources mapping="#{resourceBean.resourcePrefix}/images/**"
		location="/images/" />
	<mvc:resources mapping="#{resourceBean.resourcePrefix}/scripts/**"
		location="/scripts/" />
	<mvc:resources mapping="#{resourceBean.resourcePrefix}/styles/**"
		location="/styles/" />

	<!-- 扫描所有的controller -->
	<context:component-scan base-package="org.hbhk.module.**.controller" use-default-filters="false">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
		<context:include-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
	</context:component-scan>

	<bean id="userController"
		class="org.hbhk.module.framework.server.controller.UserController">
		<property name="userService" ref="userService" />
	</bean>

	<bean id="loginController"
		class="org.hbhk.module.framework.server.controller.LoginController">
		<property name="userService" ref="userService" />
	</bean>
		
	<mvc:annotation-driven ></mvc:annotation-driven>
	<!-- 启用基于注解的处理器映射，添加拦截器，类级别的处理器映射 -->
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**"/>
			<mvc:exclude-mapping path="#{resourceBean.resourcePrefix}/**"/>
			<bean class="org.hbhk.module.framework.server.deploy.spring.ModuleInterceptor" />
		</mvc:interceptor>
		<!-- <mvc:interceptor>
			<mvc:mapping path="/**"/>
			<mvc:exclude-mapping path="#{resourceBean.resourcePrefix}/**"/>
			<bean class="org.hbhk.module.framework.server.mysecurity.MySecurityInterceptor" />
		</mvc:interceptor> -->
		<mvc:interceptor>
			<mvc:mapping path="/**"/>
			<mvc:exclude-mapping path="#{resourceBean.resourcePrefix}/**"/>
			<bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor" /> 
		</mvc:interceptor>
		<mvc:interceptor>
			<mvc:mapping path="/**"/>
			<mvc:exclude-mapping path="#{resourceBean.resourcePrefix}/**"/>
			<bean class="org.hbhk.module.framework.server.interceptor.PerformanceWatchInterceptor" />
		</mvc:interceptor>
	</mvc:interceptors>

<!-- 	<bean id="jsonHttpMessageConverter" -->
<!-- 		class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter" /> -->

<!-- 	<bean id="myWebBinding" -->
<!-- 		class="org.hbhk.module.framework.server.interceptor.MyWebBinding"></bean> -->

	<!-- 配置一个基于注解的定制的WebBindingInitializer，解决日期转换问题，方法级别的处理器映射， 有人说该bean要放在context:component-scan前面，要不然不起作用，但我试的放后面也可以啊。 -->
<!-- 	<bean -->
<!-- 		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter"> -->
<!-- 		<property name="cacheSeconds" value="0" /> -->
<!-- 		<property name="webBindingInitializer"> -->
<!-- 			<ref bean="myWebBinding" /> -->
<!-- 		</property> -->
<!-- 		<property name="messageConverters"> -->
<!-- 			<list> -->
<!-- 				<ref bean="jsonHttpMessageConverter" /> -->
<!-- 			</list> -->
<!-- 		</property> -->
<!-- 	</bean> -->
	
	<!-- InternalResourceViewResolver默认的就是JstlView所以这里就不用配置viewClass了 -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="order" value="100" />
		<property name="prefix" value="/WEB-INF/views/"></property>
		<property name="suffix" value=".jsp"></property>
	</bean>
	
<!-- 	<bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<property name="order" value="1" />
		<property name="mediaTypes">
			<map>
				<entry key="json" value="application/json" />
				<entry key="xml" value="application/xml" />
				<entry key="pdf" value="application/pdf" />
			</map>
		</property>

		<property name="defaultViews">
			<list>
				JSON View
				<bean
					class="org.springframework.web.servlet.view.json.MappingJacksonJsonView">
				</bean>
				XML view
				<bean class="org.springframework.web.servlet.view.xml.MarshallingView">
					<constructor-arg>
						<bean class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
							<property name="classesToBeBound">
								<list>
									<value>org.hbhk.module.framework.shared.domain.Person</value>
								</list>
							</property>
						</bean>
					</constructor-arg>
				</bean>
				PDF view
				<bean class="org.hbhk.module.framework.shared.util.PdfView" />
			</list>
		</property>

		<property name="ignoreAcceptHeader" value="true" />
	</bean> -->
	
		
	<bean id="contentNegotiationManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
	    <property name="favorPathExtension" value="false" />
	    <property name="favorParameter" value="true" />
	    <property name="defaultContentType" value="application/json" />
	    <property name="mediaTypes" >
	        <value>
	            json=application/json
	            xml=application/xml
	        </value>
	    </property>
	</bean>
	<!-- 异常处理 -->
	<bean id="exceptionResolver"
		class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="defaultErrorView">
			<value>/framework/error/error</value> <!-- 接受界面 -->
		</property>
		<property name="defaultStatusCode">
			<value>500</value> <!-- 错误类型 -->
		</property>
		<property name="warnLogCategory"> <!--记录日志处理 -->
			<value>org.springframework.web.servlet.handler.SimpleMappingExceptionResolver
			</value>
		</property>
	</bean>

	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 指定所上传文件的总大小不能超过200KB。注意maxUploadSize属性的限制不是针对单个文件，而是所有文件的容量之和 -->
		<property name="defaultEncoding" value="UTF-8"></property>
		<property name="maxUploadSize" value="200000" />
		<property name="maxInMemorySize" value="4098"></property>
	</bean>

	<!-- 验证码 -->
	<bean id="captchaProducer" class="com.google.code.kaptcha.impl.DefaultKaptcha">
		<property name="config">
			<bean class="com.google.code.kaptcha.util.Config">
				<constructor-arg>
					<props>
						<prop key="kaptcha.border">no</prop>
						<prop key="kaptcha.border.color">105,179,90</prop>
						<prop key="kaptcha.textproducer.font.color">red</prop>
						<prop key="kaptcha.image.width">250</prop>
						<prop key="kaptcha.textproducer.font.size">90</prop>
						<prop key="kaptcha.image.height">90</prop>
						<prop key="kaptcha.session.key">code</prop>
						<prop key="kaptcha.textproducer.char.length">4</prop>
						<prop key="kaptcha.textproducer.font.names">宋体,楷体,微软雅黑</prop>
					</props>
				</constructor-arg>
			</bean>
		</property>
	</bean>

	<bean id="validateCodeCreateController"
		class="org.hbhk.module.framework.server.controller.ValidateCodeCreateController">
		<property name="captchaProducer" ref="captchaProducer" />
	</bean>
	
	<!--spring 国际化 -->
	  <bean id="localeResolver" class="org.springframework.web.servlet.i18n.SessionLocaleResolver" />   
	    <bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">  
         <property name="basenames">  
             <list>  
             <!-- 配置语言文件的地址的默认配置文件,在这里我是message_zh_CN.properties -->  
             <value>classpath:org/hbhk/module/framework/server/META-INF/messages/message_zh_CN</value>
            </list>  
         </property>  
         <property name="cacheSeconds" value="-1"/>  
    </bean>  
	
</beans>   